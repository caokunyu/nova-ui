{"version":3,"sources":["webpack:///./src/utils/utils.js","webpack:///./src/utils/events.js","webpack:///./src/components/input-number/utils.js","webpack:///./src/utils/template.js","webpack:///./src/utils/dom.js","webpack:///./src/components/input-number/template.js","webpack:///./src/components/input-number/index.js"],"names":["SLICE","Array","prototype","slice","TOSTRING","Object","toString","isString","hasOwnProperty","value","isObject","isPlainObject","call","isArray","isFunction","isBoolean","isNumber","isNaN","isElement","nodeType","toArray","arrayLike","mixins","target","arguments","i","deep","len","length","source","k","src","copy","_isArray","clone","throwError","message","type","method","TypeError","RangeError","Error","Events","constructor","this","_events","create","on","name","handle","context","event","id","push","off","forEach","_handle","one","self","once","apply","emit","args","destroy","getPrecision","precision","step","stepStr","dotPosition","indexOf","correctProps","props","min","max","parseFloat","Infinity","t","VARIABLE_REG","SYNTAX_REG","template","tpl","data","replace","m","code","Function","error","SELECTOR_REGS","className","tagName","bind","el","addEventListener","unbind","removeEventListener","qsa","selector","document","dom","trim","test","getElementById","RegExp","$1","getElementsByClassName","getElementsByTagName","querySelectorAll","addClass","classList","split","add","skeletonTpl","Selectors","input","increase","decrease","defaults","disabled","editable","placeholder","customClass","formatter","render","states","$el","createElement","innerHTML","$container","appendChild","$input","$increase","$decrease","handles","inputChange","e","setValue","inputKeydown","keyCode","val","precisionFactor","Math","pow","toPrecision","toggleBtnDisabled","minDisabled","maxDisabled","minMethod","maxMethod","setAttribute","Number","toFixed","InputNumber","container","options","super","initialize","oldValue","newValue","formatValue","getValue","disable","enable","remove","removeAttribute","parentNode","removeChild"],"mappings":"yFAcA,MAAMA,EAAQC,MAAMC,UAAUC,MACxBC,EAAWC,OAAOH,UAAUI,SAUrBC,GATEF,OAAOH,UAAUM,eASRC,GAA0B,iBAAVA,GAQ3BC,EAAWD,GAAmB,OAAVA,GAAmC,iBAAVA,EAY7CE,EAAgBF,GAASC,EAASD,IAAmC,oBAAzBL,EAASQ,KAAKH,GAO1DI,EAAUZ,MAAMY,QAQhBC,EAAaL,GAA0B,mBAAVA,EAgB7BM,EAAYN,GAA0B,kBAAVA,EAQ5BO,EAAWP,IAAUQ,MAAMR,IAA2B,iBAAVA,EAwB5CS,EAAYT,GAASC,EAASD,IAA6B,IAAnBA,EAAMU,WAAmBR,EAAcF,GAgD/EW,EAAUC,GAAarB,EAAMY,KAAKS,GAWxC,SAASC,IACd,IAAIC,EAASC,UAAU,OACnBC,EAAI,EACJC,GAAO,EACPC,EAAMH,UAAUI,OASpB,IARIb,EAAUQ,KACZG,EAAOH,EACPA,EAASC,UAAU,OACnBC,EAAI,GAEDf,EAASa,IAAYT,EAAWS,KACnCA,MAEKE,IAAME,GAAK,CAChB,IAAIE,EAASL,UAAUC,GACvB,GAAII,EACF,IAAK,IAAIC,KAAKD,EAAQ,CACpB,IAAIE,EAAMR,EAAOO,GACbE,EAAOH,EAAOC,GAElB,GAAIE,IAAST,EACX,SAEF,IAAIU,EAAWpB,EAAQmB,GACvB,GAAIN,IAASO,GAAYtB,EAAcqB,IAAQ,CAC7C,IAAIE,EAEFA,EADED,EACMF,GAAOlB,EAAQkB,GAAOA,KAEtBA,GAAOpB,EAAcoB,GAAOA,KAEtCR,EAAOO,GAAKR,EAAOI,EAAMQ,EAAOF,aACd,IAATA,IACTT,EAAOO,GAAKE,IAMpB,OAAOT,EAmEF,MAQMY,EAAa,CAACC,EAAUC,KAEnC,IAAIC,EACJ,OAFAF,qBAA6BA,EAAQ9B,aAE7B+B,GACR,IAAK,OACHC,EAASC,UACT,MACF,IAAK,QACHD,EAASE,WACT,MACF,QACEF,EAASG,MAEX,MAAM,IAAIH,EAAOF,ICrIJM,YAlIbC,cACEC,KAAKC,QAAUxC,OAAOyC,OAAO,MAc/BC,GAAGC,EAAMC,EAAQC,GACf,IAAKF,IAASlC,EAAWmC,GACvB,OAAOL,KAET,MAAMC,EAAUD,KAAKC,QAAQG,KAAUJ,KAAKC,QAAQG,OAC9CG,EAAQ9C,OAAOyC,OAAO,MAK5B,OAJAK,EAAMC,GAAKP,EAAQjB,OACnBuB,EAAMF,OAASA,EACfE,EAAMD,QAAUA,EAChBL,EAAQQ,KAAKF,GACNP,KAcTU,IAAIN,EAAMC,EAAQC,GAChB,IAAKF,IAASJ,KAAKC,QAAQG,GACzB,OAAOJ,KAGT,GAAIK,GAAUnC,EAAWmC,GAAS,CAChC,IAAIJ,EAAUD,KAAKC,QAAQG,GAC3BH,EAAQU,QAAQJ,KAGZA,GACCF,KAAYE,EAAMF,QAAUE,EAAMF,OAAOO,UACxCN,GAAWC,EAAMD,UAAYA,UAGxBL,EAAQM,EAAMC,MAIpBP,EAAQjB,eACJgB,KAAKC,QAAQG,QAIJ,OAAXC,UACAL,KAAKC,QAAQG,GAEtB,OAAOJ,KAcTa,IAAIT,EAAMC,EAAQC,GAChB,IAAKF,IAASlC,EAAWmC,GACvB,OAAOL,KAET,MAAMc,EAAOd,KACPe,EAAO,WAEX,OADAD,EAAKJ,IAAIN,EAAMW,EAAMT,GACdD,EAAOW,MAAMV,GAAWQ,EAAMlC,YAIvC,OAFAmC,EAAKH,QAAUP,EACfL,KAAKG,GAAGC,EAAMW,EAAMT,GACbN,KAaTiB,KAAKb,KAASc,GACZ,IAAKd,IAASJ,KAAKC,QAAQG,GACzB,OAAOJ,KAET,IAAIjB,EAAMiB,KAAKC,QAAQG,GAAMpB,OACzBH,GAAK,EAET,OAASA,EAAIE,GAAK,CAChB,IAAIwB,EAAQP,KAAKC,QAAQG,GAAMvB,GAC/B0B,EAAMF,OAAOW,MAAMT,EAAMD,SAAWN,KAAMkB,GAE5C,OAAOlB,KAUTmB,UACEnB,KAAKC,QAAU,OCxIZ,MAAMmB,EAAe,CAACC,EAAWC,KACtC,IAAIzD,EAAQ,EACZ,GAAIwD,GAAaA,EAAY,EAC3BA,GAAaA,EACRhD,MAAMgD,KACTxD,EAAQwD,QAEL,GAAIC,EAAM,CACf,MAAMC,EAAUD,EAAK5D,WACf8D,EAAcD,EAAQE,QAAQ,MACf,IAAjBD,IACF3D,EAAQ0D,EAAQvC,OAASwC,EAAc,GAG3C,OAAO3D,GASI6D,EAAeC,IAC1B,IAAIC,IAAEA,EAAFC,IAAOA,EAAPP,KAAYA,GAASK,EAOzB,GANAC,EAAME,WAAWF,EAAK,IACtBC,EAAMC,WAAWD,EAAK,IACtBP,EAAOQ,WAAWR,EAAM,IACxBM,EAAMvD,MAAMuD,IAAQG,IAAWH,EAC/BC,EAAMxD,MAAMwD,GAAOE,IAAWF,EAC9BP,EAAOjD,MAAMiD,GAAQ,EAAIA,EACrBM,EAAMC,EAAK,CACb,IAAIG,EAAIH,EACRA,EAAMD,EACNA,EAAMI,EAMR,OAJAL,EAAMC,IAAMA,EACZD,EAAME,IAAMA,EACZF,EAAML,KAAOA,EACbK,EAAMN,UAAYD,EAAaO,EAAMN,UAAWC,GACzCK,GC/CT,MAAMM,EAAe,mBAEfC,EAAa,kBA0CJC,MA9BS,CAACC,EAAKC,KAE5B,IAAKD,KAASA,EAAIX,QAAQ,MACxB,OAAOW,EAGT,IAAInD,EAAS,sCACXmD,EAAIE,QAAQ,MAAO,QAChBA,QAAQ,KAAM,OACdA,QAAQL,EAAc,CAACM,EAAGC,IAClB,KAAQA,EAAKF,QAAQ,MAAO,KAAQ,MAE5CA,QAAQJ,EAAY,CAACK,EAAGC,IAChB,MAASA,EAAKF,QAAQ,MAAO,KACjCA,QAAQ,YAAa,KAAO,cAEhCA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OAClB,4BAEF,IAEE,OADa,IAAIG,SAAS,MAAOxD,GACnBjB,KAAK,KAAMqE,GAAQ5E,OAAOyC,OAAO,OAC/C,MAAOwC,GAEP,OAAON,ICrCX,MAAMO,GACJnC,GAAI,cACJoC,UAAW,eACXC,QAAS,YAUEC,EAAO,CAACC,EAAI3C,EAAMC,IAAW0C,EAAGC,iBAAiB5C,EAAMC,GAAQ,GAS/D4C,EAAS,CAACF,EAAI3C,EAAMC,IAAW0C,EAAGG,oBAAoB9C,EAAMC,GAAQ,GAgCpE8C,EAAM,CAACC,EAAU9C,KAE5B,GADAA,EAAUA,GAAW+C,SACjB1F,EAASyF,GAAW,CAEtB,IAAIE,EAWJ,OAZAF,EAAWA,EAASG,QAIlBD,EAFEX,EAAcnC,GAAGgD,KAAKJ,IACxBE,EAAMD,SAASI,eAAeC,OAAOC,MACxBL,MACJX,EAAcC,UAAUY,KAAKJ,GAChC9C,EAAQsD,uBAAuBF,OAAOC,IACnChB,EAAcE,QAAQW,KAAKJ,GAC9B9C,EAAQuD,qBAAqBT,GAE7B9C,EAAQwD,iBAAiBV,IAEpB5E,EAAQ8E,MAEvB,UAsFWS,EAAW,CAAChB,EAAIH,KAC3B,IAAIoB,KACApB,IACEjF,EAASiF,GACXoB,EAAYpB,EAAUqB,MAAM,SACnBhG,EAAQ2E,KACjBoB,EAAYpB,IAGhBoB,EAAUrD,QAAQP,GAAQzC,EAASyC,IAASA,EAAKmD,QAAUR,EAAGiB,UAAUE,IAAI9D,EAAKmD,UCvL5E,MAAMY,EAAe,ohBCqB5B,MAAMC,GACJC,MAAO,YACPC,SAAU,6BACVC,SAAU,8BAINC,GAEJ3G,MAAO,KAEP+D,KAAMG,IAENF,IAAKE,IAELT,KAAM,EAEND,UAAW,KAEXoD,UAAU,EAEVC,UAAU,EAEVC,YAAa,KAEbvE,KAAM,KAENwE,YAAa,KAEbC,UAAW,MAUb,SAASC,IACP,MAAMC,OAAEA,EAAFpD,MAAUA,GAAU3B,KAC1B,GAAI+E,EAAOC,IACT,OAEF,MAAMA,EAAM3B,SAAS4B,cAAc,SACnCD,EAAIpC,UAAY,kBAChBmB,EAASiB,EAAKrD,EAAMiD,aACpBI,EAAIE,UAAY/C,EAASgC,GACvB/D,KAAMuB,EAAMvB,KACZqE,SAAU9C,EAAM8C,SAChBC,SAAU/C,EAAM+C,SAChB9C,IAAKD,EAAMC,IACXC,IAAKF,EAAME,IACX8C,YAAahD,EAAMgD,cAErBI,EAAOI,WAAWC,YAAYJ,GAC9BD,EAAOC,IAAMA,EACbD,EAAOM,OAASlC,EAAIiB,EAAUC,MAAOW,GAAK,GAC1CD,EAAOO,UAAYnC,EAAIiB,EAAUE,SAAUU,GAAK,GAChDD,EAAOQ,UAAYpC,EAAIiB,EAAUG,SAAUS,GAAK,GA0ClD,WACE,MAAMD,OAAEA,GAAW/E,KACbwF,EAAUT,EAAOS,QACvBA,EAAQlB,SAAWtE,KAAKsE,SAASxB,KAAK9C,MACtCwF,EAAQjB,SAAWvE,KAAKuE,SAASzB,KAAK9C,MACtCwF,EAAQC,YAnCV,SAA2BC,GACzB,GAAI1F,KAAK2B,MAAM8C,SACb,OAEFzE,KAAK2F,SAASD,EAAE/G,OAAOd,QA+BiBiF,KAAK9C,MAC7CwF,EAAQI,aArBV,SAA4BF,GAC1B,IAAIlD,EAAOkD,EAAEG,QACA,KAATrD,GAAwB,KAATA,EACjBxC,KAAKsE,WACa,KAAT9B,GAAwB,KAATA,GACxBxC,KAAKuE,YAgBmCzB,KAAK9C,MAE/C8C,EAAKiC,EAAOO,UAAW,QAASE,EAAQlB,UACxCxB,EAAKiC,EAAOQ,UAAW,QAASC,EAAQjB,UACxCzB,EAAKiC,EAAOM,OAAQ,SAAUG,EAAQC,aACtC3C,EAAKiC,EAAOM,OAAQ,UAAWG,EAAQI,eApD5B5H,KAAKgC,MAgFlB,SAASsE,EAASwB,GAChB,MAAMnE,MAAEA,EAAFoD,OAASA,GAAW/E,MACpBsB,KAAEA,EAAFD,UAAQA,GAAcM,GACtB9D,MAAEA,GAAUkH,EAClB,IAAK3G,EAAS0H,SAAgB,IAARA,EACpB,OAAOjI,EAET,MAAMkI,EAAkBC,KAAKC,IAAI,GAAI5E,GACrC,OAAO6E,GAAaH,EAAkBD,EAAMC,EAAkBzE,GAAQyE,EAAiB1E,GAYzF,SAASkD,EAASuB,GAChB,MAAMnE,MAAEA,EAAFoD,OAASA,GAAW/E,MACpBsB,KAAEA,EAAFD,UAAQA,GAAcM,GACtB9D,MAAEA,GAAUkH,EAClB,IAAK3G,EAAS0H,SAAgB,IAARA,EACpB,OAAOjI,EAET,MAAMkI,EAAkBC,KAAKC,IAAI,GAAI5E,GACrC,OAAO6E,GAAaH,EAAkBD,EAAMC,EAAkBzE,GAAQyE,EAAiB1E,GAUzF,SAAS8E,IACP,IAAIpB,OAAEA,EAAFpD,MAAUA,GAAU3B,MACpB4B,IAAEA,EAAFC,IAAOA,GAAQF,EACf9D,EAAQkH,EAAOlH,OAAS,EACxBuI,EAAczE,EAAM8C,UAAYF,EAASvG,KAAKgC,KAAMnC,GAAS,GAAK+D,EAClEyE,EAAc1E,EAAM8C,UAAYH,EAAStG,KAAKgC,KAAMnC,GAAS,GAAKgE,EAClEyE,EAAYF,EAAc,MAAQ,SAClCG,EAAYF,EAAc,MAAQ,SACtCtB,EAAOQ,UAAUvB,UAAUsC,GAAW,eACtCvB,EAAOO,UAAUtB,UAAUuC,GAAW,eACtCxB,EAAOO,UAAUkB,aAAa,gBAAiBH,GAC/CtB,EAAOQ,UAAUiB,aAAa,gBAAiBJ,GAajD,SAASF,EAAYrI,EAAOwD,GAC1B,OAAOS,WAAWA,WAAW2E,OAAO5I,GAAO6I,QAAQrF,WAYxCsF,UAAoB7G,EAU/BC,YAAY6G,EAAWC,GAErB,GADAC,UACM9G,gBAAgB2G,GACpB,OAAO,IAAIA,EAAYC,EAAWC,GAE/BvI,EAAUsI,IACbrH,EAAW,yBAA4B,QAEzCS,KAAK+E,OAAStH,OAAOyC,OAAO,MAC5BF,KAAK+E,OAAOI,WAAayB,EACzB5G,KAAK+E,OAAOS,QAAU/H,OAAOyC,OAAO,MACpCF,KAAK+G,WAAWF,GAYlBE,WAAWF,GACT7G,KAAK2B,MAAQD,EAAahD,KAAW8F,EAAUqC,QAC/C,MAAM9B,OAAEA,GAAW/E,KACnB8E,EAAO9G,KAAKgC,MACZ+E,EAAOlH,MAAQ,GACfkH,EAAOiC,SAAW,GAClBhH,KAAK2F,SAAS3F,KAAK2B,MAAM9D,OAW3B8H,SAASsB,GACP,MAAMtF,MAAEA,EAAFoD,OAASA,GAAW/E,KAC1B,IAAIgH,SAAEA,GAAajC,EACnB,MAAM1D,UAAEA,EAAFO,IAAaA,EAAbC,IAAkBA,GAAQF,EAChCsF,EAAWnF,WAAWmF,EAAU,IAC5B5I,MAAM4I,KACRA,EAAWD,GAII,KAAbC,KACFA,EAAWf,EAAYe,EAAU5F,KACjBQ,IACdoF,EAAWpF,GAEToF,GAAYrF,IACdqF,EAAWrF,IAIf,IAAIsF,EAAcvF,EAAMkD,WAAalD,EAAMkD,UAAUoC,GACrDlC,EAAOM,OAAOxH,MAAQqJ,GAAeD,EACjCD,IAAaC,IACflC,EAAOlH,MAAQoJ,EACflC,EAAOiC,SAAWC,EAClBjH,KAAKiB,KAAK,SAAUgG,EAAUD,IAGhCjC,EAAOM,OAAOmB,aAAa,gBAAiBU,GAAeD,GAE3Dd,EAAkBnI,KAAKgC,MAWzBmH,WACE,OAAOnH,KAAK+E,OAAOlH,MAUrByG,WACE,MAAMS,OAAEA,EAAFpD,MAAUA,GAAU3B,KAC1B,IAAIiH,EAAW3C,EAAStG,KAAKgC,KAAM+E,EAAOlH,OAAS,GAC/C8D,EAAMyF,SAAWH,EAAWtF,EAAME,KAGtC7B,KAAK2F,SAASsB,GAUhB1C,WACE,MAAMQ,OAAEA,EAAFpD,MAAUA,GAAU3B,KAC1B,IAAIiH,EAAW1C,EAASvG,KAAKgC,KAAM+E,EAAOlH,OAAS,GAC/C8D,EAAMyF,SAAWH,EAAWtF,EAAMC,KAGtC5B,KAAK2F,SAASsB,GAUhBG,UACEpH,KAAK2B,MAAM8C,UAAW,EACtB,MAAMM,OAAEA,GAAW/E,KACnB+E,EAAOC,IAAIhB,UAAUE,IAAI,eACzBa,EAAOM,OAAOmB,aAAa,YAAY,GACvCzB,EAAOM,OAAOmB,aAAa,iBAAiB,GAC5CL,EAAkBnI,KAAKgC,MAUzBqH,SACErH,KAAK2B,MAAM8C,UAAW,EACtB,MAAMM,OAAEA,GAAW/E,KACnB+E,EAAOC,IAAIhB,UAAUsD,OAAO,eAC5BvC,EAAOM,OAAOkC,gBAAgB,YAC9BxC,EAAOM,OAAOmB,aAAa,iBAAiB,GAC5CL,EAAkBnI,KAAKgC,MAUzBmB,WAnQF,WACE,MAAM4D,OAAEA,GAAW/E,KACbwF,EAAUT,EAAOS,QACvBvC,EAAO8B,EAAOO,UAAW,QAASE,EAAQlB,UAC1CrB,EAAO8B,EAAOQ,UAAW,QAASC,EAAQjB,UAC1CtB,EAAO8B,EAAOM,OAAQ,SAAUG,EAAQC,aACxCxC,EAAO8B,EAAOM,OAAQ,UAAWG,EAAQI,gBA8P1B5H,KAAKgC,MAClBA,KAAK+E,OAAOC,KAAOhF,KAAK+E,OAAOC,IAAIwC,YAAcxH,KAAK+E,OAAOC,IAAIwC,WAAWC,YAAYzH,KAAK+E,OAAOC,KACpGhF,KAAK+E,OAAS,KACd/E,KAAKC,QAAU,MAIJ0G","file":"assets/nova.ui.js","sourcesContent":["/*\r\n * File: utils.js\r\n * Project: @vnnox/novaui\r\n * Description: 工具函数类\r\n * Created: 2018-10-29 10:31\r\n * Author: smohan (mengxw@novastar.tech)\r\n * -----\r\n * Last Modified: 2018-10-29 10:36\r\n * Modified By: smohan (mengxw@novastar.tech>)\r\n * -----\r\n * Copyright 2018, NovaStar Tech Co., Ltd\r\n */\r\n\r\n\r\nconst SLICE = Array.prototype.slice\r\nconst TOSTRING = Object.prototype.toString\r\nconst HASOWN = Object.prototype.hasOwnProperty\r\nconst PRIMITIVE_VALUES = ['string', 'number', 'boolean', 'symbol', 'undefined']\r\n\r\n\r\n/**\r\n * 校验传入值是否是字符串\r\n * @param {*} value\r\n * @returns {Boolean} \r\n */\r\nexport const isString = value => typeof value === 'string'\r\n\r\n\r\n/**\r\n * 校验传入值是否是对象\r\n * @param {*} value \r\n * @returns {Boolean} \r\n */\r\nexport const isObject = value => value !== null && typeof value === 'object'\r\n\r\n\r\n/**\r\n * 校验传入值是否是纯对象\r\n * @param {*} value \r\n * @example\r\n * isPlainObject({}) // true\r\n * isPlainObject(null) // false\r\n * isPlainObject([]) // false\r\n * @returns {Boolean} \r\n */\r\nexport const isPlainObject = value => isObject(value) && TOSTRING.call(value) === '[object Object]'\r\n\r\n\r\n/**\r\n * 校验传入值是否是数组\r\n * @returns {Boolean}\r\n */\r\nexport const isArray = Array.isArray\r\n\r\n\r\n/**\r\n * 校验传入值是否是函数\r\n * @param {*} value \r\n * @returns {Boolean}\r\n */\r\nexport const isFunction = value => typeof value === 'function'\r\n\r\n\r\n/**\r\n * 校验传入值是否是基本类型值\r\n * @param {*} value \r\n * @returns {Boolean}\r\n */\r\nexport const isPrimitive = value => !!~PRIMITIVE_VALUES.indexOf(typeof value)\r\n\r\n\r\n/**\r\n * 校验传入值是否是布尔类型\r\n * @param {*} value \r\n * @returns {Boolean}\r\n */\r\nexport const isBoolean = value => typeof value === 'boolean'\r\n\r\n\r\n/**\r\n * 校验传入值是否是数字\r\n * @param {*} value \r\n * @returns {Boolean}\r\n */\r\nexport const isNumber = value => !isNaN(value) && typeof value === 'number'\r\n\r\n\r\n/**\r\n * 校验传入值是否是整数\r\n * @param {*} value \r\n * @returns {Boolean}\r\n */\r\nexport const isInteger = value => isNumber(value) && (value % 1 === 0)\r\n\r\n\r\n/**\r\n * 校验传入值是否是浮点数\r\n * @param {*} value \r\n * @returns {Boolean}\r\n */\r\nexport const isFloat = value => isNumber(value) && (value !== value | 0)\r\n\r\n\r\n/**\r\n * 校验传入值是否是一个DOM元素\r\n * @param {*} value \r\n * @returns {Boolean}\r\n */\r\nexport const isElement = value => isObject(value) && value.nodeType === 1 && !isPlainObject(value)\r\n\r\n\r\n/**\r\n * 校验传入值是否是一个日期对象\r\n * @param {*} value \r\n * @returns {Boolean}\r\n */\r\nexport const isDate = value => TOSTRING.call(value) === '[object Date]' && !isNaN(value.getTime())\r\n\r\n\r\n/**\r\n * 校验传入值是否为空\r\n * @param {*} value \r\n * @example\r\n * isEmpty(null) // true\r\n * isEmpty(undefined) // true\r\n * isEmpty('') // true\r\n * isEmpty('  ') // true\r\n * isEmpty(false) // false\r\n * isEmpty(0) // false\r\n * @returns {Boolean}\r\n */\r\nexport const isEmpty = value => {\r\n  if (value === null || value === void 0) {\r\n    return true\r\n  }\r\n  if (isString(value) && !value.trim()) {\r\n    return true\r\n  }\r\n  return false\r\n}\r\n\r\n\r\n/**\r\n * 判断对象自身是否含有指定的key\r\n * @param {*} key \r\n * @param {*} object \r\n * @returns {Boolean}\r\n */\r\nexport const hasKey = (key, object) => HASOWN.call(object, key)\r\n\r\n\r\n/**\r\n * 将类数组转换为数组\r\n * @param {*} arrayLike\r\n * @returns {Array} \r\n */\r\nexport const toArray = arrayLike => SLICE.call(arrayLike)\r\n\r\n\r\n/**\r\n * 对象混合\r\n * arg1 :\r\n *  Boolean: 是否深拷贝\r\n *  Object: targe\r\n * arg2, arg2, ..., argn: source\r\n * @returns {Object}\r\n */\r\nexport function mixins() {\r\n  let target = arguments[0] || {}\r\n  let i = 0\r\n  let deep = false\r\n  let len = arguments.length\r\n  if (isBoolean(target)) {\r\n    deep = target\r\n    target = arguments[1] || {}\r\n    i = 1\r\n  }\r\n  if (!isObject(target) && !isFunction(target)) {\r\n    target = {}\r\n  }\r\n  while (i++ < len) {\r\n    let source = arguments[i]\r\n    if (source) {\r\n      for (let k in source) {\r\n        let src = target[k]\r\n        let copy = source[k]\r\n        // 防止引用自身，造成死循环\r\n        if (copy === target) {\r\n          continue\r\n        }\r\n        let _isArray = isArray(copy)\r\n        if (deep && (_isArray || isPlainObject(copy))) {\r\n          let clone\r\n          if (_isArray) {\r\n            clone = src && isArray(src) ? src : []\r\n          } else {\r\n            clone = src && isPlainObject(src) ? src : {}\r\n          }\r\n          target[k] = mixins(deep, clone, copy)\r\n        } else if (copy !== void 0) {\r\n          target[k] = copy\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return target\r\n}\r\n\r\n\r\n/**\r\n * 纯对象克隆\r\n * @param {*} object\r\n * @returns {Object} \r\n */\r\nexport const objectClone = object => JSON.parse(JSON.stringify(object))\r\n\r\n\r\nconst hyphenateRE = /\\B([A-Z])/g\r\n\r\n\r\n/**\r\n * 驼峰转连接符\r\n * @param {*} str\r\n * @example\r\n * hyphenate('fadeIn') // fade-in\r\n * hyphenate('easeInOut') // ease-in-out\r\n * @returns {String} \r\n */\r\nexport const hyphenate = str => str.replace(hyphenateRE, '-$1').toLowerCase()\r\n\r\n\r\n/**\r\n * 对传入regExp的字符串转义\r\n * 搜索框中进行模糊匹配的时候\r\n * 需要对敲入的特殊字符进行转义\r\n * @param {*} value \r\n * @returns {RegExp}\r\n */\r\nexport const escapeRegExp = value => value.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$&')\r\n\r\n\r\n/**\r\n * 根据路径从一个对象中获取其值\r\n * 内置了容错机制，防止层级太深时报错\r\n * @param {*} path \r\n * @param {*} object \r\n * @example\r\n * getObjectValue(p1.p1, obj) // obj.p1.p2\r\n * @returns {*}\r\n */\r\nexport const getObjectValue = (path, object) => {\r\n  if (isEmpty(path)) {\r\n    return void 0\r\n  }\r\n  let paths = path.trim().split('.')\r\n  while (paths.length) {\r\n    let k = paths.shift()\r\n    object = object[k]\r\n    if (!isPlainObject(object) && !isArray(object)) {\r\n      break\r\n    }\r\n  }\r\n  return object\r\n}\r\n\r\n\r\nlet uid = 0\r\n\r\n/**\r\n * gen uuid\r\n * @returns {Number}\r\n */\r\nexport const uuid = () => ++uid\r\n\r\n\r\n/**\r\n * 抛出异常\r\n * @param {*} message \r\n * @param {*} type \r\n */\r\nexport const throwError = (message,  type) => {\r\n  message = `[NOVA.UI.ERROR] ${message.toString()}`\r\n  let method\r\n  switch (type) {\r\n  case 'type':\r\n    method = TypeError\r\n    break\r\n  case 'range':\r\n    method = RangeError\r\n    break\r\n  default:\r\n    method = Error\r\n  }\r\n  throw new method(message)\r\n}\r\n\r\n\r\nexport default {\r\n  isString,\r\n  isObject,\r\n  isPlainObject,\r\n  isArray,\r\n  isFunction,\r\n  isPrimitive,\r\n  isBoolean,\r\n  isNumber,\r\n  isInteger,\r\n  isFloat,\r\n  isElement,\r\n  isDate,\r\n  isEmpty,\r\n  hasKey,\r\n  toArray,\r\n  mixins,\r\n  objectClone,\r\n  hyphenate,\r\n  escapeRegExp,\r\n  getObjectValue,\r\n  uuid,\r\n  throwError\r\n}\r\n\r\n","/*\r\n * File: events.js\r\n * Project: @vnnox/novaui\r\n * Description: 发布订阅器类\r\n * Created: 2018-10-29 11:27\r\n * Author: smohan (mengxw@novastar.tech)\r\n * -----\r\n * Last Modified: 2018-10-29 11:27\r\n * Modified By: smohan (mengxw@novastar.tech>)\r\n * -----\r\n * Copyright 2018, NovaStar Tech Co., Ltd\r\n */\r\n\r\n\r\nimport { isFunction } from './utils'\r\n\r\n/**\r\n * 发布订阅器类\r\n * @author smohan(mengxw@novastar.tech)\r\n * @date 2018-10-29\r\n * @export\r\n * @class Events\r\n */\r\nexport class Events {\r\n\r\n  /**\r\n   * Creates an instance of Events.\r\n   * @author smohan(mengxw@novastar.tech)\r\n   * @date 2018-10-29\r\n   * @memberof Events\r\n   */\r\n  constructor() {\r\n    this._events = Object.create(null)\r\n  }\r\n\r\n\r\n  /**\r\n   * 注册事件\r\n   * @author smohan(mengxw@novastar.tech)\r\n   * @date 2018-10-29\r\n   * @param {*} name\r\n   * @param {*} handle\r\n   * @param {*} context\r\n   * @returns\r\n   * @memberof Events\r\n   */\r\n  on(name, handle, context) {\r\n    if (!name || !isFunction(handle)) {\r\n      return this\r\n    }\r\n    const _events = this._events[name] || (this._events[name] = [])\r\n    const event = Object.create(null)\r\n    event.id = _events.length\r\n    event.handle = handle\r\n    event.context = context\r\n    _events.push(event)\r\n    return this\r\n  }\r\n\r\n\r\n  /**\r\n   * 解绑事件\r\n   * @author smohan(mengxw@novastar.tech)\r\n   * @date 2018-10-29\r\n   * @param {*} name\r\n   * @param {*} handle\r\n   * @param {*} context\r\n   * @returns\r\n   * @memberof Events\r\n   */\r\n  off(name, handle, context) {\r\n    if (!name || !this._events[name]) {\r\n      return this\r\n    }\r\n    // 如果指定了handle\r\n    if (handle && isFunction(handle)) {\r\n      let _events = this._events[name]\r\n      _events.forEach(event => {\r\n        // 匹配相同引用的handle\r\n        if (\r\n          event &&\r\n          (handle === (event.handle || event.handle._handle)) &&\r\n          (!context || event.context === context)\r\n        ) {\r\n          // 删除索引为event.id的事件  \r\n          delete _events[event.id]\r\n        }\r\n      })\r\n      // 如果当前队列已空，则移除该名称事件\r\n      if (!_events.length) {\r\n        delete this._events[name]\r\n      }\r\n    }\r\n    // 解绑所有同名事件\r\n    else if (handle === null) {\r\n      delete this._events[name]\r\n    }\r\n    return this\r\n  }\r\n\r\n\r\n  /**\r\n   * 一次性事件绑定\r\n   * @author smohan(mengxw@novastar.tech)\r\n   * @date 2018-10-29\r\n   * @param {*} name\r\n   * @param {*} handle\r\n   * @param {*} context\r\n   * @returns\r\n   * @memberof Events\r\n   */\r\n  one(name, handle, context) {\r\n    if (!name || !isFunction(handle)) {\r\n      return this\r\n    }\r\n    const self = this\r\n    const once = function () {\r\n      self.off(name, once, context)\r\n      return handle.apply(context || self, arguments)\r\n    }\r\n    once._handle = handle\r\n    this.on(name, once, context)\r\n    return this\r\n  }\r\n\r\n\r\n  /**\r\n   * 触发事件\r\n   * @author smohan(mengxw@novastar.tech)\r\n   * @date 2018-10-29\r\n   * @param {*} name\r\n   * @param {*} args\r\n   * @returns\r\n   * @memberof Events\r\n   */\r\n  emit(name, ...args) {\r\n    if (!name || !this._events[name]) {\r\n      return this\r\n    }\r\n    let len = this._events[name].length\r\n    let i = -1\r\n    // 依次执行事件队列\r\n    while (++i < len) {\r\n      let event = this._events[name][i]\r\n      event.handle.apply(event.context || this, args)\r\n    }\r\n    return this\r\n  }\r\n\r\n  \r\n  /**\r\n   * 销毁\r\n   * @author smohan(mengxw@novastar.tech)\r\n   * @date 2018-10-29\r\n   * @memberof Events\r\n   */\r\n  destroy() {\r\n    this._events = null\r\n  }\r\n}\r\n\r\nexport default Events ","\r\n/*\r\n * File: utils.js\r\n * Project: @vnnox/novaui\r\n * Description: InputNumber/Slider辅助函数\r\n * Created: 2018-10-29 11:56\r\n * Author: smohan (mengxw@novastar.tech)\r\n * -----\r\n * Last Modified: 2018-10-29 11:57\r\n * Modified By: smohan (mengxw@novastar.tech>)\r\n * -----\r\n * Copyright 2018, NovaStar Tech Co., Ltd\r\n */\r\n\r\n\r\n/**\r\n * 获取精度\r\n * @param {*} precision \r\n * @param {*} step \r\n * @returns {Number}\r\n */\r\nexport const getPrecision = (precision, step) => {\r\n  let value = 0\r\n  if (precision && precision > 0) {\r\n    precision = +precision\r\n    if (!isNaN(precision)) {\r\n      value = precision\r\n    }\r\n  } else if (step) {\r\n    const stepStr = step.toString()\r\n    const dotPosition = stepStr.indexOf('.')\r\n    if (dotPosition !== -1) {\r\n      value = stepStr.length - dotPosition - 1\r\n    }\r\n  }\r\n  return value\r\n}\r\n\r\n\r\n/**\r\n * 校正参数\r\n * @param {*} props \r\n * @returns {Object}\r\n */\r\nexport const correctProps = props => {\r\n  let { min, max, step } = props\r\n  min = parseFloat(min, 10)\r\n  max = parseFloat(max, 10)\r\n  step = parseFloat(step, 10)\r\n  min = isNaN(min) ? -Infinity : min\r\n  max = isNaN(max) ? Infinity : max\r\n  step = isNaN(step) ? 1 : step\r\n  if (min > max) {\r\n    let t = max\r\n    max = min\r\n    min = t\r\n  }\r\n  props.min = min\r\n  props.max = max\r\n  props.step = step\r\n  props.precision = getPrecision(props.precision, step)\r\n  return props\r\n}\r\n\r\nexport default {\r\n  getPrecision,\r\n  correctProps\r\n}","/*\r\n * File: template.js\r\n * Project: @vnnox/novaui\r\n * Description: 模板编译类\r\n * Created: 2018-10-29 03:39\r\n * Author: smohan (mengxw@novastar.tech)\r\n * -----\r\n * Last Modified: 2018-10-29 03:41\r\n * Modified By: smohan (mengxw@novastar.tech>)\r\n * -----\r\n * Copyright 2018, NovaStar Tech Co., Ltd\r\n */\r\n\r\n// 变量规则\r\nconst VARIABLE_REG = /<%=([\\s\\S]+?)%>/g\r\n// 语法规则\r\nconst SYNTAX_REG = /<%([\\s\\S]+?)%>/g\r\n\r\n/**\r\n * 编译模板\r\n * @param {*} tpl \r\n * @param {*} data\r\n * @example\r\n * <% if(something) {%>\r\n * <div><%= something%></div>\r\n * <% }%> \r\n * @returns {String}\r\n */\r\nexport const template = (tpl, data) => {\r\n  // 不包含变量的话直接返回tpl\r\n  if (!tpl || !~tpl.indexOf('<%')) {\r\n    return tpl\r\n  }\r\n\r\n  let source = 'var __p=[];' + 'with(obj||{}){__p.push(\\'' +\r\n    tpl.replace(/\\\\/g, '\\\\\\\\')\r\n      .replace(/'/g, '\\\\\\'')\r\n      .replace(VARIABLE_REG, (m, code) => {\r\n        return '\\',' + code.replace(/\\\\'/, '\\'') + ',\\''\r\n      })\r\n      .replace(SYNTAX_REG, (m, code) => {\r\n        return '\\');' + code.replace(/\\\\'/, '\\'')\r\n          .replace(/[\\r\\n\\t]/g, ' ') + '__p.push(\\''\r\n      })\r\n      .replace(/\\r/g, '\\\\r')\r\n      .replace(/\\n/g, '\\\\n')\r\n      .replace(/\\t/g, '\\\\t') +\r\n    '\\');}return __p.join(\"\");'\r\n\r\n  try {\r\n    let render = new Function('obj', source)\r\n    return render.call(null, data || Object.create(null))\r\n  } catch (error) {\r\n    // todo\r\n    return tpl\r\n  }\r\n}\r\n\r\nexport default template","/*\r\n * File: dom.js\r\n * Project: @vnnox/novaui\r\n * Description: DOM 操作类\r\n * Created: 2018-10-29 10:57\r\n * Author: smohan (mengxw@novastar.tech)\r\n * -----\r\n * Last Modified: 2018-10-29 10:58\r\n * Modified By: smohan (mengxw@novastar.tech>)\r\n * -----\r\n * Copyright 2018, NovaStar Tech Co., Ltd\r\n */\r\n\r\nimport { isString, toArray, isArray } from './utils'\r\n\r\n\r\n// selector\r\nconst SELECTOR_REGS = {\r\n  id: /^#([\\w-]+)$/,\r\n  className: /^\\.([\\w-]+)$/,\r\n  tagName: /^[\\w-]+$/,\r\n}\r\n\r\n\r\n/**\r\n * 绑定DOM事件\r\n * @param {*} el \r\n * @param {*} name \r\n * @param {*} handle \r\n */\r\nexport const bind = (el, name, handle) => el.addEventListener(name, handle, false)\r\n\r\n\r\n/**\r\n * 解绑DOM事件\r\n * @param {*} el \r\n * @param {*} name \r\n * @param {*} handle \r\n */\r\nexport const unbind = (el, name, handle) => el.removeEventListener(name, handle, false)\r\n\r\n\r\n/**\r\n * 绑定一次性事件\r\n * @param {*} el \r\n * @param {*} name \r\n * @param {*} handle \r\n */\r\nexport const once = (el, name, handle) => {\r\n  // 中间事件\r\n  const listener = function () {\r\n    handle && handle.apply(this, arguments)\r\n    // 解绑中间事件\r\n    unbind(el, name, listener)\r\n  }\r\n  // 绑定中间事件\r\n  bind(el, name, listener)\r\n}\r\n\r\n\r\n/**\r\n * DOM 选择器\r\n * 统一API，返回一个DOM集合\r\n * @param {*} selector 选择器\r\n * @param {*} context 父级上下文\r\n * @example \r\n * qsa('#id')\r\n * qsa('.className')\r\n * qsa('input[type=\"radio\"]', qsa('#id')[0])\r\n * @returns {Array} \r\n */\r\nexport const qsa = (selector, context) => {\r\n  context = context || document\r\n  if (isString(selector)) {\r\n    selector = selector.trim()\r\n    let dom\r\n    if (SELECTOR_REGS.id.test(selector)) {\r\n      dom = document.getElementById(RegExp.$1)\r\n      dom = dom ? [dom] : []\r\n    } else if (SELECTOR_REGS.className.test(selector)) {\r\n      dom = context.getElementsByClassName(RegExp.$1)\r\n    } else if (SELECTOR_REGS.tagName.test(selector)) {\r\n      dom = context.getElementsByTagName(selector)\r\n    } else {\r\n      dom = context.querySelectorAll(selector)\r\n    }\r\n    return dom ? toArray(dom) : []\r\n  }\r\n  return []\r\n}\r\n\r\n\r\n/**\r\n * 生成一个代理事件执行函数\r\n * @param {*} element \r\n * @param {*} selector \r\n * @param {*} callback\r\n * @example\r\n * const $ul = qsa('ul')[0]\r\n * let proxyHandle = proxy($ul, 'li', function() { })\r\n * bind($ul, 'click', proxyHandle) \r\n * @returns {Function}\r\n */\r\nexport const proxy = function (element, selector, callback) {\r\n  return function (event) {\r\n    const nodes = qsa(selector, element)\r\n    let matched\r\n    const target = event.target\r\n    for (let i = 0, len = nodes.length; i < len; i++) {\r\n      const node = nodes[i]\r\n      if (node === target || node.contains(target)) {\r\n        matched = node\r\n        break\r\n      }\r\n    }\r\n    if (matched) {\r\n      callback.apply(matched, toArray(arguments))\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * 获取元素的位置信息\r\n * @param {*} element\r\n * @returns {Object} \r\n */\r\nexport const getOffset = element => {\r\n  let rect = element.getBoundingClientRect()\r\n  let win = element.ownerDocument.defaultView\r\n  let top = rect.top + win.pageYOffset\r\n  let left = rect.left + win.pageXOffset\r\n  return {\r\n    top,\r\n    left,\r\n    rect,\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * 获取元素计算后的样式\r\n * @param {HTMLElement} element \r\n * @param {String} style\r\n * @returns {String | Object} \r\n */\r\nexport const getStyle = (element, style) => {\r\n  let styles = element.ownerDocument.defaultView.getComputedStyle(element, null)\r\n  return style ? styles[style] : styles\r\n}\r\n\r\n\r\n/**\r\n * 插入到目标元素之后\r\n * @param {*} target 目标元素 \r\n * @param {*} node 新元素\r\n * @returns {*}\r\n */\r\nexport const insertAfter = (target, node) => {\r\n  const $parent = target.parentNode\r\n  if ($parent.lastChild === target) {\r\n    $parent.appendChild(node)\r\n  } else {\r\n    $parent.insertBefore(node, target.nextSibling)\r\n  }\r\n  return node\r\n}\r\n\r\n\r\n/**\r\n * 添加样式\r\n * @param {*} el \r\n * @param {string|array} className \r\n */\r\nexport const addClass = (el, className) => {\r\n  let classList = []\r\n  if (className) {\r\n    if (isString(className)) {\r\n      classList = className.split(/,|\\s+/)\r\n    } else if (isArray(className)) {\r\n      classList = className\r\n    }\r\n  }\r\n  classList.forEach(name => isString(name) && name.trim() && el.classList.add(name.trim()))\r\n}\r\n\r\n\r\n/**\r\n * 获取滚动条的宽度\r\n * @returns {Number} \r\n */\r\nexport const getScrollbarWidth = () => {\r\n  if (getScrollbarWidth.value !== void 0) {\r\n    return getScrollbarWidth.value\r\n  }\r\n  const scrollDiv = document.createElement('div')\r\n  scrollDiv.style.cssText += 'width:100px;position:absolute;top:-9999rem;z-index:-1;visibility:hidden;'\r\n  document.body.appendChild(scrollDiv)\r\n  scrollDiv.style.overflow = 'scroll'\r\n  const width = scrollDiv.getBoundingClientRect().width - scrollDiv.clientWidth\r\n  scrollDiv.parentNode.removeChild(scrollDiv)\r\n  getScrollbarWidth.value = width\r\n  return getScrollbarWidth.value\r\n}\r\n\r\n\r\nexport default {\r\n  bind,\r\n  unbind,\r\n  once,\r\n  getOffset,\r\n  getStyle,\r\n  insertAfter,\r\n  qsa,\r\n  proxy,\r\n  addClass,\r\n  getScrollbarWidth\r\n}","export const skeletonTpl = `\r\n<input type=\"text\" class=\"nv-input\" placeholder=\"<%= placeholder%>\" name=\"<%= name%>\" role=\"spinbutton\" autocomplete=\"off\" aria-valuemin=\"<%= min%>\" aria-valuemax=\"<%= max%>\" aria-valuenow=\"\" aria-disabled=\"<%= disabled%>\"<% if (!editable) {%> readonly<% }%><% if (disabled) {%> disabled<% }%>/>\r\n<a class=\"nv-input-number__increase\" role=\"button\" aria-label=\"Increase Value\" aria-disabled=\"<%=disabled%>\"></a>\r\n<a class=\"nv-input-number__decrease\" role=\"button\" aria-label=\"Decrease Value\" aria-disabled=\"<%=disabled%>\"></a>\r\n`\r\n\r\nexport default skeletonTpl","/*\r\n * File: index.js\r\n * Project: @vnnox/novaui\r\n * Description: Used for ...\r\n * Created: 2018-10-29 11:32\r\n * Author: smohan (mengxw@novastar.tech)\r\n * -----\r\n * Last Modified: 2018-10-29 11:32\r\n * Modified By: smohan (mengxw@novastar.tech>)\r\n * -----\r\n * Copyright 2018, NovaStar Tech Co., Ltd\r\n */\r\n\r\nimport Events from '../../utils/events'\r\nimport { isElement, throwError, mixins, isNumber } from '../../utils/utils'\r\nimport { correctProps } from './utils'\r\nimport template from '../../utils/template'\r\nimport { addClass, qsa, bind, unbind } from '../../utils/dom'\r\nimport { skeletonTpl } from './template'\r\n\r\n// 选择器\r\nconst Selectors = {\r\n  input: '.nv-input',\r\n  increase: '.nv-input-number__increase',\r\n  decrease: '.nv-input-number__decrease'\r\n}\r\n\r\n// 默认配置\r\nconst defaults = {\r\n  // 当前值\r\n  value: null,\r\n  // min value\r\n  min: -Infinity,\r\n  // max value\r\n  max: Infinity,\r\n  // step\r\n  step: 1,\r\n  // 精度\r\n  precision: null,\r\n  // 禁用\r\n  disabled: false,\r\n  // 输入框是否可输入，只允许控制按钮\r\n  editable: true,\r\n  // 输入框placeholder\r\n  placeholder: null,\r\n  // 输入框name属性\r\n  name: null,\r\n  // 自定义样式\r\n  customClass: null,\r\n  // 格式化\r\n  formatter: null\r\n}\r\n\r\n\r\n/**\r\n * render\r\n * @private\r\n * @author smohan(mengxw@novastar.tech)\r\n * @date 2018-10-29\r\n */\r\nfunction render() {\r\n  const { states, props } = this\r\n  if (states.$el) {\r\n    return\r\n  }\r\n  const $el = document.createElement('label')\r\n  $el.className = 'nv-input-number'\r\n  addClass($el, props.customClass)\r\n  $el.innerHTML = template(skeletonTpl, {\r\n    name: props.name,\r\n    disabled: props.disabled,\r\n    editable: props.editable,\r\n    min: props.min,\r\n    max: props.max,\r\n    placeholder: props.placeholder\r\n  })\r\n  states.$container.appendChild($el)\r\n  states.$el = $el\r\n  states.$input = qsa(Selectors.input, $el)[0]\r\n  states.$increase = qsa(Selectors.increase, $el)[0]\r\n  states.$decrease = qsa(Selectors.decrease, $el)[0]\r\n  bindEvents.call(this)\r\n}\r\n\r\n\r\n/**\r\n * input change\r\n * @private\r\n * @author smohan(mengxw@novastar.tech)\r\n * @date 2018-10-29\r\n * @param {*} e\r\n */\r\nfunction handleInputChange(e) {\r\n  if (this.props.disabled) {\r\n    return\r\n  }\r\n  this.setValue(e.target.value)\r\n}\r\n\r\n\r\n/**\r\n * input keydown\r\n * @private\r\n * @author smohan(mengxw@novastar.tech)\r\n * @date 2018-10-29\r\n * @param {*} e\r\n */\r\nfunction handleInputKeydown(e) {\r\n  let code = e.keyCode\r\n  if (code === 38 || code === 39) {\r\n    this.increase()\r\n  } else if (code === 37 || code === 40) {\r\n    this.decrease()\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * 绑定DOM事件\r\n * @author smohan(mengxw@novastar.tech)\r\n * @date 2018-10-29\r\n */\r\nfunction bindEvents() {\r\n  const { states } = this\r\n  const handles = states.handles\r\n  handles.increase = this.increase.bind(this)\r\n  handles.decrease = this.decrease.bind(this)\r\n  handles.inputChange = handleInputChange.bind(this)\r\n  handles.inputKeydown = handleInputKeydown.bind(this)\r\n\r\n  bind(states.$increase, 'click', handles.increase)\r\n  bind(states.$decrease, 'click', handles.decrease)\r\n  bind(states.$input, 'change', handles.inputChange)\r\n  bind(states.$input, 'keydown', handles.inputKeydown)\r\n}\r\n\r\n\r\n/**\r\n * 解绑DOM事件\r\n * @private\r\n * @author smohan(mengxw@novastar.tech)\r\n * @date 2018-10-29\r\n */\r\nfunction unbindEvents() {\r\n  const { states } = this\r\n  const handles = states.handles\r\n  unbind(states.$increase, 'click', handles.increase)\r\n  unbind(states.$decrease, 'click', handles.decrease)\r\n  unbind(states.$input, 'change', handles.inputChange)\r\n  unbind(states.$input, 'keydown', handles.inputKeydown)\r\n}\r\n\r\n\r\n/**\r\n * 递增\r\n * @private\r\n * @author smohan(mengxw@novastar.tech)\r\n * @date 2018-10-29\r\n * @param {*} val\r\n * @returns\r\n */\r\nfunction increase(val) {\r\n  const { props, states } = this\r\n  const { step, precision } = props\r\n  const { value } = states\r\n  if (!isNumber(val) && val !== void 0) {\r\n    return value\r\n  }\r\n  const precisionFactor = Math.pow(10, precision)\r\n  return toPrecision((precisionFactor * val + precisionFactor * step) / precisionFactor, precision)\r\n}\r\n\r\n\r\n/**\r\n * 递减\r\n * @private\r\n * @author smohan(mengxw@novastar.tech)\r\n * @date 2018-10-29\r\n * @param {*} val\r\n * @returns\r\n */\r\nfunction decrease(val) {\r\n  const { props, states } = this\r\n  const { step, precision } = props\r\n  const { value } = states\r\n  if (!isNumber(val) && val !== void 0) {\r\n    return value\r\n  }\r\n  const precisionFactor = Math.pow(10, precision)\r\n  return toPrecision((precisionFactor * val - precisionFactor * step) / precisionFactor, precision)\r\n}\r\n\r\n\r\n/**\r\n * 设置increase/decrease按钮禁用状态\r\n * @private\r\n * @author smohan(mengxw@novastar.tech)\r\n * @date 2018-10-29\r\n */\r\nfunction toggleBtnDisabled() {\r\n  let { states, props } = this\r\n  let { min, max } = props\r\n  let value = states.value || 0\r\n  let minDisabled = props.disabled || decrease.call(this, value || 0) < min\r\n  let maxDisabled = props.disabled || increase.call(this, value || 0) > max\r\n  let minMethod = minDisabled ? 'add' : 'remove'\r\n  let maxMethod = maxDisabled ? 'add' : 'remove'\r\n  states.$decrease.classList[minMethod]('nv-disabled')\r\n  states.$increase.classList[maxMethod]('nv-disabled')\r\n  states.$increase.setAttribute('aria-disabled', maxDisabled)\r\n  states.$decrease.setAttribute('aria-disabled', minDisabled)\r\n}\r\n\r\n\r\n/**\r\n * 精确化值\r\n * @private\r\n * @author smohan(mengxw@novastar.tech)\r\n * @date 2018-10-29\r\n * @param {*} value\r\n * @param {*} precision\r\n * @returns\r\n */\r\nfunction toPrecision(value, precision) {\r\n  return parseFloat(parseFloat(Number(value).toFixed(precision)))\r\n}\r\n\r\n\r\n/**\r\n * 数字输入框\r\n * @author smohan(mengxw@novastar.tech)\r\n * @date 2018-10-29\r\n * @export\r\n * @class InputNumber\r\n * @extends {Events}\r\n */\r\nexport class InputNumber extends Events {\r\n\r\n  /**\r\n   * Creates an instance of InputNumber.\r\n   * @author smohan(mengxw@novastar.tech)\r\n   * @date 2018-10-29\r\n   * @param {*} container\r\n   * @param {*} options\r\n   * @memberof InputNumber\r\n   */\r\n  constructor(container, options) {\r\n    super()\r\n    if (!(this instanceof InputNumber)) {\r\n      return new InputNumber(container, options)\r\n    }\r\n    if (!isElement(container)) {\r\n      throwError('\\'container\\' 必须是一个DOM容器', 'type')\r\n    }\r\n    this.states = Object.create(null)\r\n    this.states.$container = container\r\n    this.states.handles = Object.create(null)\r\n    this.initialize(options)\r\n  }\r\n\r\n\r\n  /**\r\n   * 初始化\r\n   * 当配置文件改变时调用\r\n   * @author smohan(mengxw@novastar.tech)\r\n   * @date 2018-10-29\r\n   * @param {*} options\r\n   * @memberof InputNumber\r\n   */\r\n  initialize(options) {\r\n    this.props = correctProps(mixins({}, defaults, options || {}))\r\n    const { states } = this\r\n    render.call(this)\r\n    states.value = ''\r\n    states.oldValue = ''\r\n    this.setValue(this.props.value)\r\n  }\r\n\r\n\r\n  /**\r\n   * 设置值\r\n   * @author smohan(mengxw@novastar.tech)\r\n   * @date 2018-10-29\r\n   * @param {*} newValue\r\n   * @memberof InputNumber\r\n   */\r\n  setValue(newValue) {\r\n    const { props, states } = this\r\n    let { oldValue } = states\r\n    const { precision, min, max } = props\r\n    newValue = parseFloat(newValue, 10)\r\n    if (isNaN(newValue)) {\r\n      newValue = oldValue\r\n    }\r\n\r\n    // oldValue === ''\r\n    if (newValue !== '') {\r\n      newValue = toPrecision(newValue, precision)\r\n      if (newValue >= max) {\r\n        newValue = max\r\n      }\r\n      if (newValue <= min) {\r\n        newValue = min\r\n      }\r\n    }\r\n\r\n    let formatValue = props.formatter && props.formatter(newValue)\r\n    states.$input.value = formatValue || newValue\r\n    if (oldValue !== newValue) {\r\n      states.value = newValue\r\n      states.oldValue = newValue\r\n      this.emit('change', newValue, oldValue)\r\n    }\r\n\r\n    states.$input.setAttribute('aria-valuenow', formatValue || newValue)\r\n    // toggle btn disabled\r\n    toggleBtnDisabled.call(this)\r\n  }\r\n\r\n\r\n  /**\r\n   * 获取值\r\n   * @author smohan(mengxw@novastar.tech)\r\n   * @date 2018-10-29\r\n   * @returns\r\n   * @memberof InputNumber\r\n   */\r\n  getValue() {\r\n    return this.states.value\r\n  }\r\n\r\n\r\n  /**\r\n   * 递增\r\n   * @author smohan(mengxw@novastar.tech)\r\n   * @date 2018-10-29\r\n   * @memberof InputNumber\r\n   */\r\n  increase() {\r\n    const { states, props } = this\r\n    let newValue = increase.call(this, states.value || 0)\r\n    if (props.disable || newValue > props.max) {\r\n      return\r\n    }\r\n    this.setValue(newValue)\r\n  }\r\n\r\n\r\n  /**\r\n   * 递减\r\n   * @author smohan(mengxw@novastar.tech)\r\n   * @date 2018-10-29\r\n   * @memberof InputNumber\r\n   */\r\n  decrease() {\r\n    const { states, props } = this\r\n    let newValue = decrease.call(this, states.value || 0)\r\n    if (props.disable || newValue < props.min) {\r\n      return\r\n    }\r\n    this.setValue(newValue)\r\n  }\r\n\r\n  \r\n  /**\r\n   * 禁用\r\n   * @author smohan(mengxw@novastar.tech)\r\n   * @date 2018-10-29\r\n   * @memberof InputNumber\r\n   */\r\n  disable() {\r\n    this.props.disabled = true\r\n    const { states } = this\r\n    states.$el.classList.add('nv-disabled')\r\n    states.$input.setAttribute('disabled', true)\r\n    states.$input.setAttribute('aria-disabled', true)\r\n    toggleBtnDisabled.call(this)\r\n  }\r\n\r\n\r\n  /**\r\n   * 启用\r\n   * @author smohan(mengxw@novastar.tech)\r\n   * @date 2018-10-29\r\n   * @memberof InputNumber\r\n   */\r\n  enable() {\r\n    this.props.disabled = false\r\n    const { states } = this\r\n    states.$el.classList.remove('nv-disabled')\r\n    states.$input.removeAttribute('disabled')\r\n    states.$input.setAttribute('aria-disabled', false)\r\n    toggleBtnDisabled.call(this)\r\n  }\r\n\r\n\r\n  /**\r\n   * 销毁\r\n   * @author smohan(mengxw@novastar.tech)\r\n   * @date 2018-10-29\r\n   * @memberof InputNumber\r\n   */\r\n  destroy() {\r\n    unbindEvents.call(this)\r\n    this.states.$el && this.states.$el.parentNode && this.states.$el.parentNode.removeChild(this.states.$el)\r\n    this.states = null\r\n    this._events = null\r\n  }\r\n}\r\n\r\nexport default InputNumber"],"sourceRoot":""}